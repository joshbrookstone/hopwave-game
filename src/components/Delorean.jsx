/*
auto-generated by: https://github.com/react-spring/gltfjsx
author: jellyraincoat (https://sketchfab.com/jellyraincoat)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/delorean-time-machine-low-poly-a36c5afa1bb24e16a3adfbcf08eb9390
title: Delorean - time machine - low poly
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useLoader } from 'react-three-fiber'
import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'

export default function Model(props) {
  const group = useRef()
  const { nodes, materials } = useLoader(GLTFLoader, '/scene.gltf')
  return (
    <group ref={group} {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <group position={[0.17, 0, 0.12]}>
          <group rotation={[Math.PI / 2, 0, 0]}>
            <mesh material={materials.delorean} geometry={nodes.mesh_0.geometry} />
            <mesh material={materials.window} geometry={nodes.mesh_1.geometry} />
            <mesh material={materials.windshield} geometry={nodes.mesh_2.geometry} />
            <mesh material={materials.sides} geometry={nodes.mesh_3.geometry} />
            <mesh material={materials.wheels} geometry={nodes.mesh_4.geometry} />
            <mesh material={materials.wheels_2} geometry={nodes.mesh_5.geometry} />
            <mesh material={materials.cooler} geometry={nodes.mesh_6.geometry} />
            <mesh material={materials.metal_parts} geometry={nodes.mesh_7.geometry} />
            <mesh material={materials.buttons} geometry={nodes.mesh_8.geometry} />
            <mesh material={materials.buttons_2} geometry={nodes.mesh_9.geometry} />
            <mesh material={materials.board} geometry={nodes.mesh_10.geometry} />
            <mesh material={materials.circuits} geometry={nodes.mesh_11.geometry} />
            <mesh material={materials.circuits_2} geometry={nodes.mesh_12.geometry} />
            <mesh material={materials.time_circuits} geometry={nodes.mesh_13.geometry} />
            <mesh material={materials.back_part} geometry={nodes.mesh_14.geometry} />
            <group position={[1.54, 2.99, -12.24]} scale={[0.82, 0.82, 0.82]}>
              <mesh material={materials.mr_fusion} geometry={nodes.mesh_15.geometry} />
              <mesh material={materials.mr_fusion_2} geometry={nodes.mesh_16.geometry} />
              <mesh material={materials.mr_fusion_3} geometry={nodes.mesh_17.geometry} />
            </group>
            <group position={[-5.12, 2.37, -12.23]} rotation={[2.67, -0.14, 0.27]} scale={[1, 1, 1]}>
              <mesh material={materials.front_part} geometry={nodes.mesh_18.geometry} />
              <mesh material={materials.front_part_2} geometry={nodes.mesh_19.geometry} />
            </group>
            <group position={[1.63, 2.91, -11.12]}>
              <mesh material={materials.cables} geometry={nodes.mesh_20.geometry} />
            </group>
            <group position={[-2.01, 2.15, -10.44]} rotation={[Math.PI / 2, 0, 0]} scale={[2.17, 2.17, 2.17]}>
              <mesh material={materials.cables} geometry={nodes.mesh_21.geometry} />
            </group>
            <group position={[1.12, 2.93, -11.95]} rotation={[-Math.PI, 0, -Math.PI]}>
              <mesh material={materials.cables} geometry={nodes.mesh_22.geometry} />
            </group>
            <group position={[-2.01, 2.15, -13.87]} rotation={[Math.PI / 2, 0, 0]} scale={[2.17, 2.17, 2.17]}>
              <mesh material={materials.cables} geometry={nodes.mesh_23.geometry} />
            </group>
            <group position={[1.13, 2.91, -13.2]} rotation={[-Math.PI, 0, -Math.PI]}>
              <mesh material={materials.cables} geometry={nodes.mesh_24.geometry} />
            </group>
            <group position={[1.64, 2.91, -13.2]}>
              <mesh material={materials.cables} geometry={nodes.mesh_25.geometry} />
            </group>
          </group>
        </group>
      </group>
    </group>
  )
}
